services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  backend:
    build: ./server
    ports:
      - '4000:4000'
    env_file:
      - ./server/.env
    depends_on:
      - db
      - redis
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run dev
  frontend:
    build: './client'
    ports:
      - '5173:5173'
    env_file:
      - ./client/.env
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev


volumes:
  pgdata:
  redis_data:
